---
title: "Excel Workshop for Actuarial Science"
subtitle: "MTSU Student Actuarial Club"
author: "MTSU Student Actuarial Club"
date: last-modified
date-format: "DD MMMM YYYY"
format:
  html:
    theme: cosmo
    toc: true
    toc-depth: 3
    toc-title: "Contents"
    number-sections: true
    highlight-style: github
    self-contained: true
    page-layout: article
    code-tools: true
    code-fold: show
    html-math-method: katex
    css: styles.css
    
execute:
  echo: true
  warning: false
  message: false
  
bibliography: references.bib
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  warning = FALSE,
  message = FALSE,
  fig.align = 'center',
  out.width = '80%'
)
```

# Overview {.unnumbered}

This workshop provides comprehensive training on Excel techniques essential for actuarial work. It covers:

1. Spreadsheet Design Guidelines & Best Practices
2. Basic and Advanced Excel Functions
3. Data Analysis Tools
4. Life Insurance and Reserving Examples

# Spreadsheet Design Guidelines {#sec-design}

::: {.callout-tip}
## Best Practices for Professional Models
Following these guidelines will help create robust, maintainable spreadsheets.
:::

## Structural Organization {#sec-structure}

### Layout Principles
- Organize worksheets left-to-right, top-to-bottom
- One column per data type
- Clear, descriptive headers
- Insert blank rows/columns for visual separation
- Group related calculations together

### Naming Conventions
- Use short, meaningful sheet names (e.g., `Profits25`)
- Create named ranges for key inputs
- Use consistent prefixes:
  - `input_` for parameters
  - `calc_` for calculations
  - `output_` for results

## Formula Best Practices {#sec-formula-practices}

### Anchoring References
```excel
Absolute Column: $A1
Absolute Row: A$1
Both Fixed: $A$1
```

### Decimal Handling
- Use cell formatting instead of `ROUND()` where possible
- Set appropriate decimal places based on precision needs
- Consider financial rounding requirements

### Intermediate Calculations
- Break complex formulas into steps
- Use helper columns for transparency
- Document calculation logic
- Example:
  ```excel
  Original: =PMT(Rate,Term,PV*(1+Fees))
  Better:
  Cell A1: =PV*(1+Fees) "Adjusted Principal"
  Cell A2: =PMT(Rate,Term,A1) "Payment Amount"
  ```

### Parameter Management
- Avoid hard-coding values in formulas
- Place all assumptions in dedicated input cells
- Document sources and update frequency

## Common Pitfalls {#sec-pitfalls}

::: {.callout-warning}
## Critical Issues to Watch For
These issues can cause subtle errors in calculations if not handled properly.
:::

### Floating-Point Precision
- Problem: `1.1 + 0.1 = 1.2` may return FALSE
- Solution: Use tolerance in comparisons
  ```excel
  Bad:  =A1=1.2
  Good: =ABS(A1-1.2)<0.0001
  ```

### Operator Precedence
- Problem: `-A1^2/2` is parsed as `-(A1^2)/2`
- Solution: Use explicit parentheses
  ```excel
  Clear: =(-A1)^2/2
  ```

### Function Limitations
- VLOOKUP requires leftmost key column
- Better alternative using INDEX+MATCH:
  ```excel
  Old:  =VLOOKUP(lookup_value,table,col,FALSE)
  New:  =INDEX(return_range,MATCH(lookup_value,lookup_range,0))
  ```

### Performance Considerations
- Large models may need manual calculation mode
- Use F9 for selective recalculation
- Avoid volatile functions when possible:
  - NOW()
  - TODAY()
  - RAND()
  - OFFSET()
  - INDIRECT()

## Version Control {#sec-version}

### Freezing Results
1. Select range to freeze
2. Home > Paste > Paste Values (or Alt+H+V+V)
3. Document snapshot date and reason

### Best Practices
- Keep master copy with formulas
- Create dated backups
- Document major changes
- Consider using Excel's built-in version history

# Excel Functions {#sec-functions}

## Essential Functions {#sec-essential-functions}

::: {.callout-note}
These foundational functions are critical for actuarial work.
:::

| Function | Syntax Example | Description |
|----------|---------------|-------------|
| IF | `=IF(A1>0, "Positive", "Negative")` | Returns one value if TRUE, another if FALSE |
| AND | `=AND(A1>0, B1<10)` | TRUE if all conditions are TRUE |
| OR | `=OR(A1>0, B1<10)` | TRUE if any condition is TRUE |
| NOT | `=NOT(A1>0)` | Reverses TRUE/FALSE |
| COUNT | `=COUNT(A1:A10)` | Counts numeric entries |
| COUNTA | `=COUNTA(A1:A10)` | Counts non-empty cells |
| SUM | `=SUM(A1:A10)` | Adds up values |
| AVERAGE | `=AVERAGE(A1:A10)` | Mean of values |
| MIN, MAX | `=MIN(A1:A10), =MAX(A1:A10)` | Min or Max value |
| LARGE, SMALL | `=LARGE(A1:A10, 2)` | Kth largest/smallest value |
| ROUND | `=ROUND(123.456, 2)` | Rounds to 2 decimals |
| ROUNDUP, ROUNDDOWN | `=ROUNDUP(123.456, 2)` | Round up/down |
| ABS | `=ABS(A1)` | Absolute value |
| INT | `=INT(3.7)` | Integer part (floor) |
| RAND() | `=RAND()` | Random number between 0 and 1 |
| RANDBETWEEN | `=RANDBETWEEN(1,6)` | Random integer in range |
| VLOOKUP | `=VLOOKUP(lookup, table, col, FALSE)` | Vertical lookup |
| HLOOKUP | `=HLOOKUP(lookup, table, row, FALSE)` | Horizontal lookup |
| OFFSET | `=OFFSET(A1, 1, 2)` | Returns value offset by rows and cols |
| SUMIF | `=SUMIF(A1:A10, ">10")` | Sum if condition met |
| COUNTIF | `=COUNTIF(A1:A10, "Male")` | Count if condition met |
| AVERAGEIF | `=AVERAGEIF(A1:A10, ">5")` | Average if condition met |
| SUMPRODUCT | `=SUMPRODUCT(A1:A10, B1:B10)` | ∑ (Ai × Bi) |
| CORREL | `=CORREL(A1:A10, B1:B10)` | Correlation coefficient |

## Advanced Excel Features {#sec-advanced}

### Financial Analysis Tools {#sec-financial}

| Function | Syntax Example | Actuarial Use Case |
|----------|---------------|-------------------|
| NPV | `=NPV(rate, cashflows)` | Present value of future cash flows |
| XNPV | `=XNPV(rate, cashflows, dates)` | NPV with specific dates |
| IRR | `=IRR(cashflows)` | Internal rate of return |
| XIRR | `=XIRR(cashflows, dates)` | IRR with irregular periods |
| PMT | `=PMT(rate, nper, pv, [fv], [type])` | Calculate premium payments |
| PPMT | `=PPMT(rate, per, nper, pv)` | Principal portion of payment |
| IPMT | `=IPMT(rate, per, nper, pv)` | Interest portion of payment |
| FV | `=FV(rate, nper, pmt, [pv], [type])` | Future value calculation |
| RATE | `=RATE(nper, pmt, pv, [fv])` | Interest rate calculation |

### Statistical Analysis {#sec-statistical}

| Function | Syntax Example | Actuarial Use Case |
|----------|---------------|-------------------|
| NORMDIST | `=NORMDIST(x, mean, sd, TRUE)` | Normal distribution probability |
| NORMINV | `=NORMINV(prob, mean, sd)` | Normal distribution quantiles |
| CONFIDENCE | `=CONFIDENCE(alpha, sd, n)` | Confidence interval calculation |
| PERCENTILE | `=PERCENTILE(array, k)` | Risk metrics (VaR) |
| FORECAST | `=FORECAST(x, known_y, known_x)` | Linear prediction |

# Data Analysis Tools {#sec-analysis}

## Data Tables and Scenario Analysis {#sec-scenarios}

Data Tables are powerful tools for sensitivity analysis and scenario testing.

Path: Data > What-If Analysis > Data Table

### Types of Data Tables
1. One-Variable Data Table
   - Varies one input
   - Shows impact on multiple outputs

2. Two-Variable Data Table
   - Varies two inputs
   - Shows impact on single output

### Example: Premium Sensitivity Analysis

```excel
Input Variables:
- Row Input: Interest_Rate
- Column Input: Lapse_Rate
Output Formula: =Calculate_Premium()
```

# Practical Applications {#sec-applications}

## Life Insurance Pricing {#sec-life-insurance}

### Premium Calculations
```excel
=PMT(rate, nper, pv, [fv], [type])
```

### Reserving Methods
```excel
=SUMPRODUCT(triangle_array, development_factors_array)
```

# Workshop Exercises {#sec-exercises}

## Practice Files
The following files contain hands-on exercises:

1. `Excel Workshop Material/MTSU Excel Workshop.xlsm`
2. `BackUp/Reserving Exercise.xlsm`

# References {#sec-references}

::: {.callout-note}
For more detailed information about Excel functions in actuarial work, refer to:

- @soa2024best "Best Practices in Actuarial Spreadsheet Design"
- @cas2024 "Casualty Actuarial Society Excel Best Practices"
- @actuarialexcel2024 "Modern Excel Techniques in Actuarial Practice"
:::

